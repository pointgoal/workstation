definitions:
  controller.CreateOrgResponse:
    properties:
      orgId:
        type: integer
    type: object
  controller.CreateProjRequest:
    properties:
      name:
        type: string
    type: object
  controller.CreateProjResponse:
    properties:
      orgId:
        type: integer
      projId:
        type: integer
    type: object
  controller.DeleteOrgResponse:
    properties:
      status:
        type: boolean
    type: object
  controller.DeleteProjResponse:
    properties:
      status:
        type: boolean
    type: object
  controller.GetOrgResponse:
    properties:
      org:
        $ref: '#/definitions/controller.Org'
    type: object
  controller.GetProjResponse:
    properties:
      proj:
        $ref: '#/definitions/controller.Proj'
    type: object
  controller.ListOrgResponse:
    properties:
      orgList:
        items:
          $ref: '#/definitions/controller.Org'
        type: array
    type: object
  controller.ListProjResponse:
    properties:
      projList:
        items:
          $ref: '#/definitions/controller.Proj'
        type: array
    type: object
  controller.Org:
    properties:
      meta:
        $ref: '#/definitions/repository.Org'
      projIds:
        items:
          type: integer
        type: array
    type: object
  controller.Proj:
    properties:
      meta:
        $ref: '#/definitions/repository.Proj'
    type: object
  controller.UpdateOrgRequest:
    properties:
      name:
        type: string
    type: object
  controller.UpdateOrgResponse:
    properties:
      status:
        type: boolean
    type: object
  controller.UpdateProjRequest:
    properties:
      name:
        type: string
    type: object
  controller.UpdateProjResponse:
    properties:
      status:
        type: boolean
    type: object
  repository.Org:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  repository.Proj:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      orgId:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact:
    email: lark@pointgoal.io
    name: PointGoal team
    url: https://github.com/pointgoal/workstation
  description: This is workstation backend with rk-boot.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Workstation
  version: "1.0"
paths:
  /v1//proj/{projId}:
    post:
      operationId: "10"
      parameters:
      - description: Project Id
        in: path
        name: projId
        required: true
        type: integer
      - description: Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateProjRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.UpdateProjResponse'
      summary: update project
      tags:
      - project
  /v1/org:
    get:
      operationId: "1"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ListOrgResponse'
      summary: List organizations
      tags:
      - organization
    put:
      operationId: "3"
      parameters:
      - description: Organization name
        in: query
        name: orgName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.CreateOrgResponse'
      summary: Create organization
      tags:
      - organization
  /v1/org/{orgId}:
    delete:
      operationId: "4"
      parameters:
      - description: Organization Id
        in: path
        name: orgId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.DeleteOrgResponse'
      summary: Delete organization
      tags:
      - organization
    get:
      operationId: "2"
      parameters:
      - description: Organization Id
        in: path
        name: orgId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetOrgResponse'
      summary: Get organization
      tags:
      - organization
    post:
      operationId: "5"
      parameters:
      - description: Organization
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateOrgRequest'
      - description: Organization Id
        in: path
        name: orgId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.UpdateOrgResponse'
      summary: Update organization
      tags:
      - organization
  /v1/proj:
    get:
      operationId: "6"
      parameters:
      - description: Organization Id
        in: query
        name: orgId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ListProjResponse'
      summary: List projects
      tags:
      - project
    put:
      operationId: "8"
      parameters:
      - description: Organization Id
        in: query
        name: orgId
        required: true
        type: integer
      - description: Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/controller.CreateProjRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.CreateProjResponse'
      summary: create project
      tags:
      - project
  /v1/proj/{projId}:
    delete:
      operationId: "9"
      parameters:
      - description: Project Id
        in: path
        name: projId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.DeleteProjResponse'
      summary: delete project
      tags:
      - project
    get:
      operationId: "7"
      parameters:
      - description: Project Id
        in: path
        name: projId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.GetProjResponse'
      summary: Get project
      tags:
      - project
swagger: "2.0"
