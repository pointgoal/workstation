// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "PointGoal team",
            "url": "https://github.com/pointgoal/workstation",
            "email": "lark@pointgoal.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/org": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "List organizations",
                "operationId": "1",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.ListOrgsResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Create organization",
                "operationId": "3",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization name",
                        "name": "org_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.CreateOrgResponse"
                        }
                    }
                }
            }
        },
        "/v1/org/{org_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get organization",
                "operationId": "2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization Id",
                        "name": "org_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.GetOrgResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Update organization",
                "operationId": "5",
                "parameters": [
                    {
                        "description": "Organization",
                        "name": "org",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/project.UpdateOrgRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Organization Id",
                        "name": "org_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.UpdateOrgResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Delete organization",
                "operationId": "4",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization Id",
                        "name": "org_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.DeleteOrgResponse"
                        }
                    }
                }
            }
        },
        "/v1/org/{org_id}/proj": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "List projects",
                "operationId": "6",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization Id",
                        "name": "org_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.ListProjectResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "create project",
                "operationId": "8",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization Id",
                        "name": "org_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Project",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/project.CreateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.CreateProjectResponse"
                        }
                    }
                }
            }
        },
        "/v1/org/{org_id}/proj/{proj_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get project",
                "operationId": "7",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization Id",
                        "name": "org_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "proj_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.GetProjectResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "update project",
                "operationId": "10",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization Id",
                        "name": "org_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "proj_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Project",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/project.UpdateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.UpdateProjectResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "delete project",
                "operationId": "9",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization Id",
                        "name": "org_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Project Id",
                        "name": "proj_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.DeleteProjectResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "project.CreateOrgResponse": {
            "type": "object",
            "properties": {
                "orgId": {
                    "type": "string"
                }
            }
        },
        "project.CreateProjectRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "project.CreateProjectResponse": {
            "type": "object",
            "properties": {
                "orgId": {
                    "type": "string"
                },
                "projId": {
                    "type": "string"
                }
            }
        },
        "project.DeleteOrgResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "project.DeleteProjectResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "project.GetOrgResponse": {
            "type": "object",
            "properties": {
                "orgs": {
                    "$ref": "#/definitions/project.Organization"
                }
            }
        },
        "project.GetProjectResponse": {
            "type": "object",
            "properties": {
                "orgId": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/project.Project"
                }
            }
        },
        "project.ListOrgsResponse": {
            "type": "object",
            "properties": {
                "orgs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/project.Organization"
                    }
                }
            }
        },
        "project.ListProjectResponse": {
            "type": "object",
            "properties": {
                "orgId": {
                    "type": "string"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/project.Project"
                    }
                }
            }
        },
        "project.Organization": {
            "type": "object",
            "properties": {
                "createAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updateAt": {
                    "type": "string"
                }
            }
        },
        "project.Project": {
            "type": "object",
            "properties": {
                "createAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updateAt": {
                    "type": "string"
                }
            }
        },
        "project.UpdateOrgRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "project.UpdateOrgResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "project.UpdateProjectRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "project.UpdateProjectResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Workstation",
	Description: "This is workstation backend with rk-boot.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
